using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Security.Cryptography;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace WindowsFormsApp1
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void axWindowsMediaPlayer1_Enter(object sender, EventArgs e)
        {
            //Stanley add
            //try
            //{

            //}
            //catch (Exception ee)
            //{
            //    var a = ee;
            //    var b = 1;
            ////}
            //if (axWindowsMediaPlayer1.playState == WMPLib.WMPPlayState.wmppsPlaying)
            //{
            //    axWindowsMediaPlayer1.fullScreen = true;
            //}

            //axWindowsMediaPlayer1.URL = @"C:\Users\iphon\Desktop\Gmail\Hu.mp4";
       
        }

        private void button1_Click(object sender, EventArgs e)
        {
           string pathSource = @"C:\Testing\LearningSystem\Original.mp4";
           string pathEncrypt = @"C:\Testing\LearningSystem\Encrypt.mp4";
           string pathDecrypt = @"C:\Testing\LearningSystem\Decrypt.mp4";

           using (FileStream fsSource = new FileStream(pathSource, FileMode.Open, FileAccess.Read))
           {
                #region 取得原始資料
                //string source = "ELearning system";
                //byte[] dataByteArray = Encoding.UTF8.GetBytes(source);
                var fileLength = fsSource.Length;
                byte[] originalByteArray = new byte[fileLength];

                int numBytesToRead = (int)fsSource.Length;
                int numBytesRead = 0;
                while (numBytesToRead > 0)
                {
                    // Read may return anything from 0 to numBytesToRead.
                    int n = fsSource.Read(originalByteArray, numBytesRead, numBytesToRead);

                    // Break when the end of the file is reached.
                    if (n == 0)
                        break;

                    numBytesRead += n;
                    numBytesToRead -= n;
                }
                numBytesToRead = originalByteArray.Length;
                #endregion 取得原始資料

                #region 加解密 key
                DESCryptoServiceProvider des = new DESCryptoServiceProvider();
                byte[] key = Encoding.ASCII.GetBytes("12345678");
                byte[] iv = Encoding.ASCII.GetBytes("87654321");
                des.Key = key;
                des.IV = iv;
                #endregion 加解密 key

                #region 加密
                string encrypt = "";
                byte[] encryptByteArray = new byte[fileLength];

                using (MemoryStream ms = new MemoryStream())
                {
                    using (CryptoStream cs = new CryptoStream(ms, des.CreateEncryptor(), CryptoStreamMode.Write))
                    {
                        cs.Write(originalByteArray, 0, originalByteArray.Length);
                        cs.FlushFinalBlock();
                        encrypt = Convert.ToBase64String(ms.ToArray());
                        encryptByteArray = Convert.FromBase64String(encrypt);
                    }
                }

                using (FileStream fsNew = new FileStream(pathEncrypt,
                     FileMode.Create, FileAccess.Write))
                {
                    fsNew.Write(encryptByteArray, 0, numBytesToRead);
                }


                #endregion 加密

                #region 解密
                string decrypt = "";
                byte[] decryptByteArray = new byte[fileLength];
                des.Key = Encoding.ASCII.GetBytes("12345678");
                des.IV = Encoding.ASCII.GetBytes("87654321");
                using (MemoryStream ms = new MemoryStream())
                {
                    using (CryptoStream cs = new CryptoStream(ms, des.CreateDecryptor(), CryptoStreamMode.Write))
                    {
                        cs.Write(encryptByteArray, 0, encryptByteArray.Length);
                        cs.FlushFinalBlock();
                        decrypt = Encoding.UTF8.GetString(ms.ToArray());
                        decryptByteArray = ms.ToArray();
                    }
                }

                using (FileStream fsNew = new FileStream(pathDecrypt,
                   FileMode.Create, FileAccess.Write))
                {
                    fsNew.Write(decryptByteArray, 0, numBytesToRead);
                }

                #endregion 解密
            }
        }

        private void button2_Click(object sender, EventArgs e)
        {
            axWindowsMediaPlayer1.URL = @"C:\Testing\LearningSystem\Encrypt.mp4";
            
        }

        private void button3_Click(object sender, EventArgs e)
        {
            axWindowsMediaPlayer1.URL = @"C:\Testing\LearningSystem\Decrypt.mp4";
        }
    }
}
